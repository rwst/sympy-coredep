
# This file was generated by sfood-graph.

strict digraph "dependencies" {
    graph [
        rankdir = "LR",
        overlap = "scale",
        size = "8,10",
        ratio = "fill",
        fontsize = "16",
        fontname = "Helvetica",
        clusterrank = "local"
        ]

       node [
           fontsize=10
           shape=ellipse
           // style=filled
           // shape=box
       ];

"CORE/add.py"  [style=filled];
"CORE/add.py" -> "sympy";
"CORE/add.py" -> "sympy/calculus/util.py";
"CORE/add.py" -> "sympy/series/limitseq.py";
"CORE/add.py" -> "collections.py";
"CORE/assumptions.py"  [style=filled];
"CORE/assumptions.py" -> "random.py";
"CORE/basic.py"  [style=filled];
"CORE/basic.py" -> "sympy";
"CORE/basic.py" -> "sympy/polys";
"CORE/basic.py" -> "sympy/printing";
"CORE/basic.py" -> "sympy/series/order.py";
"CORE/basic.py" -> "sympy/simplify";
"CORE/basic.py" -> "sympy/simplify/simplify.py";
"CORE/basic.py" -> "sympy/utilities";
"CORE/basic.py" -> "sympy/utilities/misc.py";
"CORE/basic.py" -> "inspect.py";
"CORE/cache.py"  [style=filled];
"CORE/cache.py" -> "distutils/version.py";
"CORE/cache.py" -> "functools.py";
"CORE/cache.py" -> "os.py";
"CORE/cache.py" -> "platform.py";
"CORE/cache.py" -> "warnings.py";
"CORE/compatibility.py"  [style=filled];
"CORE/compatibility.py" -> "sympy/external";
"CORE/compatibility.py" -> "sympy/utilities/iterables.py";
"CORE/compatibility.py" -> "__builtin__";
"CORE/compatibility.py" -> "sys";
"CORE/compatibility.py" -> "StringIO.py";
"CORE/compatibility.py" -> "codecs.py";
"CORE/compatibility.py" -> "collections.py";
"CORE/compatibility.py" -> "functools.py";
"CORE/compatibility.py" -> "os.py";
"CORE/compatibility.py" -> "string.py";
"CORE/compatibility.py" -> "subprocess.py";
"CORE/compatibility.py" -> "threading.py";
"CORE/compatibility.py" -> "types.py";
"CORE/compatibility.py" -> "warnings.py";
"CORE/compatibility.py" -> "cStringIO.so";
"CORE/compatibility.py" -> "itertools.so";
"CORE/compatibility.py" -> "operator.so";
"CORE/containers.py"  [style=filled];
"CORE/containers.py" -> "sympy/utilities";
"CORE/containers.py" -> "sympy/utilities/iterables.py";
"CORE/decorators.py"  [style=filled];
"CORE/decorators.py" -> "sympy/utilities/exceptions.py";
"CORE/decorators.py" -> "functools.py";
"CORE/evalf.py"  [style=filled];
"CORE/evalf.py" -> "sympy";
"CORE/evalf.py" -> "sympy/concrete/products.py";
"CORE/evalf.py" -> "sympy/concrete/summations.py";
"CORE/evalf.py" -> "sympy/functions/combinatorial/numbers.py";
"CORE/evalf.py" -> "sympy/functions/elementary/complexes.py";
"CORE/evalf.py" -> "sympy/functions/elementary/exponential.py";
"CORE/evalf.py" -> "sympy/functions/elementary/integers.py";
"CORE/evalf.py" -> "sympy/functions/elementary/piecewise.py";
"CORE/evalf.py" -> "sympy/functions/elementary/trigonometric.py";
"CORE/evalf.py" -> "sympy/integrals/integrals.py";
"CORE/evalf.py" -> "sympy/utilities/iterables.py";
"CORE/evalf.py" -> "mpmath";
"CORE/evalf.py" -> "mpmath/libmp";
"CORE/evalf.py" -> "mpmath/libmp/backend.py";
"CORE/evalf.py" -> "mpmath/libmp/gammazeta.py";
"CORE/evalf.py" -> "mpmath/libmp/libmpc.py";
"CORE/evalf.py" -> "mpmath/libmp/libmpf.py";
"CORE/evalf.py" -> "math.so";
"CORE/evaluate.py"  [style=filled];
"CORE/evaluate.py" -> "contextlib.py";
"CORE/expr.py"  [style=filled];
"CORE/expr.py" -> "sympy";
"CORE/expr.py" -> "sympy/assumptions/refine.py";
"CORE/expr.py" -> "sympy/functions/elementary/complexes.py";
"CORE/expr.py" -> "sympy/integrals";
"CORE/expr.py" -> "sympy/polys";
"CORE/expr.py" -> "sympy/polys/numberfields.py";
"CORE/expr.py" -> "sympy/polys/orderings.py";
"CORE/expr.py" -> "sympy/polys/polyerrors.py";
"CORE/expr.py" -> "sympy/polys/polytools.py";
"CORE/expr.py" -> "sympy/series";
"CORE/expr.py" -> "sympy/series/formal.py";
"CORE/expr.py" -> "sympy/series/fourier.py";
"CORE/expr.py" -> "sympy/series/gruntz.py";
"CORE/expr.py" -> "sympy/series/limits.py";
"CORE/expr.py" -> "sympy/simplify";
"CORE/expr.py" -> "sympy/simplify/combsimp.py";
"CORE/expr.py" -> "sympy/simplify/powsimp.py";
"CORE/expr.py" -> "sympy/simplify/radsimp.py";
"CORE/expr.py" -> "sympy/simplify/ratsimp.py";
"CORE/expr.py" -> "sympy/simplify/simplify.py";
"CORE/expr.py" -> "sympy/simplify/trigsimp.py";
"CORE/expr.py" -> "sympy/solvers/solvers.py";
"CORE/expr.py" -> "sympy/solvers/solveset.py";
"CORE/expr.py" -> "sympy/utilities/iterables.py";
"CORE/expr.py" -> "sympy/utilities/misc.py";
"CORE/expr.py" -> "sympy/utilities/randtest.py";
"CORE/expr.py" -> "mpmath/libmp";
"CORE/expr.py" -> "mpmath/libmp/libintmath.py";
"CORE/expr.py" -> "collections.py";
"CORE/expr.py" -> "math.so";
"CORE/exprtools.py"  [style=filled];
"CORE/exprtools.py" -> "sympy";
"CORE/exprtools.py" -> "sympy/polys";
"CORE/exprtools.py" -> "sympy/polys/polyerrors.py";
"CORE/exprtools.py" -> "sympy/polys/polyroots.py";
"CORE/exprtools.py" -> "sympy/polys/polytools.py";
"CORE/exprtools.py" -> "sympy/simplify/powsimp.py";
"CORE/exprtools.py" -> "sympy/utilities";
"CORE/exprtools.py" -> "sympy/utilities/iterables.py";
"CORE/exprtools.py" -> "collections.py";
"CORE/facts.py"  [style=filled];
"CORE/facts.py" -> "collections.py";
"CORE/function.py"  [style=filled];
"CORE/function.py" -> "sympy";
"CORE/function.py" -> "sympy/logic/boolalg.py";
"CORE/function.py" -> "sympy/polys/rootoftools.py";
"CORE/function.py" -> "sympy/printing";
"CORE/function.py" -> "sympy/sets/fancysets.py";
"CORE/function.py" -> "sympy/sets/sets.py";
"CORE/function.py" -> "sympy/simplify/radsimp.py";
"CORE/function.py" -> "sympy/simplify/simplify.py";
"CORE/function.py" -> "sympy/utilities";
"CORE/function.py" -> "sympy/utilities/iterables.py";
"CORE/function.py" -> "sympy/utilities/lambdify.py";
"CORE/function.py" -> "sympy/utilities/misc.py";
"CORE/function.py" -> "mpmath";
"CORE/function.py" -> "mpmath/libmp";
"CORE/function.py" -> "inspect.py";
"CORE/mod.py"  [style=filled];
"CORE/mod.py" -> "sympy/polys/polytools.py";
"CORE/mul.py"  [style=filled];
"CORE/mul.py" -> "sympy";
"CORE/mul.py" -> "sympy/calculus/util.py";
"CORE/mul.py" -> "sympy/functions/elementary/complexes.py";
"CORE/mul.py" -> "sympy/ntheory/factor_.py";
"CORE/mul.py" -> "sympy/series/limitseq.py";
"CORE/mul.py" -> "sympy/simplify/powsimp.py";
"CORE/mul.py" -> "sympy/simplify/radsimp.py";
"CORE/mul.py" -> "sympy/simplify/simplify.py";
"CORE/mul.py" -> "collections.py";
"CORE/mul.py" -> "operator.so";
"CORE/numbers.py"  [style=filled];
"CORE/numbers.py" -> "sympy";
"CORE/numbers.py" -> "sympy/functions";
"CORE/numbers.py" -> "sympy/functions/elementary/complexes.py";
"CORE/numbers.py" -> "sympy/ntheory";
"CORE/numbers.py" -> "sympy/polys";
"CORE/numbers.py" -> "sympy/polys/numberfields.py";
"CORE/numbers.py" -> "sympy/polys/polyclasses.py";
"CORE/numbers.py" -> "sympy/polys/polytools.py";
"CORE/numbers.py" -> "sympy/utilities/misc.py";
"CORE/numbers.py" -> "mpmath";
"CORE/numbers.py" -> "mpmath/ctx_mp.py";
"CORE/numbers.py" -> "mpmath/libmp";
"CORE/numbers.py" -> "mpmath/libmp/libmpf.py";
"CORE/numbers.py" -> "atexit.py";
"CORE/numbers.py" -> "collections.py";
"CORE/numbers.py" -> "decimal.py";
"CORE/numbers.py" -> "fractions.py";
"CORE/numbers.py" -> "os.py";
"CORE/numbers.py" -> "re.py";
"CORE/numbers.py" -> "math.so";
"CORE/numbers.py" -> "gmpy.so";
"CORE/numbers.py" -> "gmpy2.so";
"CORE/operations.py"  [style=filled];
"CORE/operations.py" -> "sympy";
"CORE/operations.py" -> "sympy/simplify/radsimp.py";
"CORE/power.py"  [style=filled];
"CORE/power.py" -> "sympy";
"CORE/power.py" -> "sympy/functions/elementary/complexes.py";
"CORE/power.py" -> "sympy/functions/elementary/exponential.py";
"CORE/power.py" -> "sympy/polys/polytools.py";
"CORE/power.py" -> "sympy/polys/polyutils.py";
"CORE/power.py" -> "sympy/utilities/iterables.py";
"CORE/power.py" -> "mpmath/libmp";
"CORE/power.py" -> "math.so";
"CORE/relational.py"  [style=filled];
"CORE/relational.py" -> "sympy/logic/boolalg.py";
"CORE/relational.py" -> "sympy/solvers/inequalities.py";
"CORE/symbol.py"  [style=filled];
"CORE/symbol.py" -> "sympy";
"CORE/symbol.py" -> "sympy/logic/boolalg.py";
"CORE/symbol.py" -> "sympy/utilities/exceptions.py";
"CORE/symbol.py" -> "sympy/utilities/iterables.py";
"CORE/symbol.py" -> "collections.py";
"CORE/symbol.py" -> "inspect.py";
"CORE/symbol.py" -> "re.py";
"CORE/symbol.py" -> "string.py";
"CORE/sympify.py"  [style=filled];
"CORE/sympify.py" -> "sympy/parsing/sympy_parser.py";
"CORE/sympify.py" -> "inspect.py";
"CORE/sympify.py" -> "re.py";
"CORE/trace.py"  [style=filled];
"CORE/trace.py" -> "sympy";
"CORE/trace.py" -> "sympy/utilities";


}
